plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

ext {
	set('springCloudVersion', '2021.0.1')
	set('springCloudAlibabaVersion', '2021.0.1.0')
	set('wrenchVersion', '1.1.3')
}

allprojects {
	group = 'io.github.maodua'
	version = '0.0.1-SNAPSHOT'

	java {
		sourceCompatibility = JavaVersion.VERSION_17
		targetCompatibility = JavaVersion.VERSION_17
		withJavadocJar()
		withSourcesJar()
	}
	repositories {
		mavenLocal()
		maven { url 'https://maven.aliyun.com/nexus/content/groups/public' }
		maven { url 'https://maven.aliyun.com/nexus/content/repositories/gradle-plugin' }
		mavenCentral()
		// spring 仓库
		maven { url 'https://repo.spring.io/milestone' }
		maven { url 'https://repo.spring.io/snapshot' }
	}
}

subprojects {
	apply plugin: 'java-library'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'org.springframework.boot'

//	dependencyManagement {
//		imports {
//			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
//			mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
//		}
//	}

	test {
		// 使用JUnit平台
		useJUnitPlatform()
	}

	dependencies {
		api platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
		api platform("com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}")

		api                     'org.springframework.boot:spring-boot-starter'
		api 					'org.springframework.cloud:spring-cloud-starter-bootstrap'
		api						'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config'
		api					 	('com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery'){
			exclude group: 'org.springframework.cloud', module:'spring-cloud-starter-netflix-ribbon'
		}
		api						'org.springframework.cloud:spring-cloud-starter-openfeign'
		api 					'org.springframework.cloud:spring-cloud-loadbalancer'
		testImplementation		'org.springframework.boot:spring-boot-starter-test'

		// lombok
		annotationProcessor     'org.projectlombok:lombok'
		compileOnly             'org.projectlombok:lombok'
		testAnnotationProcessor 'org.projectlombok:lombok'
		testCompileOnly         'org.projectlombok:lombok'
	}


}









